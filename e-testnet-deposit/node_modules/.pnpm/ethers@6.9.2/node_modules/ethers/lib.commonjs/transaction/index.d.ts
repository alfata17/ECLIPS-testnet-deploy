/**
 *  Each state-changing operation on Ethereum requires a transaction.
 *
 *  @_section api/transaction:Transactions  [about-transactions]
 */
/**
 *  A single [[AccessList]] entry of storage keys (slots) for an address.
 */
export type AccessListEntry = {
    address: string;
    storageKeys: Array<string>;
};
/**
 *  An ordered collection of [[AccessList]] entries.
 */
export type AccessList = Array<AccessListEntry>;
/**
 *  Any ethers-supported access list structure.
 */
export type AccessListish = AccessList | Array<[string, Array<string>]> | Record<string, Array<string>>;
export { accessListify } from ".pnpm/ethers@6.9.2/node_modules/ethers/src.ts/transaction/accesslist.js";
export { computeAddress, recoverAddress } from ".pnpm/ethers@6.9.2/node_modules/ethers/src.ts/transaction/address.js";
export { Transaction } from ".pnpm/ethers@6.9.2/node_modules/ethers/src.ts/transaction/transaction.js";
export type { TransactionLike } from ".pnpm/ethers@6.9.2/node_modules/ethers/src.ts/transaction/transaction.js";
//# sourceMappingURL=index.d.ts.map